// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuAPI.Infrastructure.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MottuAPI.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottuAPI.Domain.Entities.AreaPatio", b =>
                {
                    b.Property<int>("IdAreaPatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_AREA_PATIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAreaPatio"));

                    b.Property<string>("DescricaoArea")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("DESCRICAO_AREA");

                    b.Property<int>("IdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PATIO");

                    b.Property<string>("NomeArea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME_AREA");

                    b.Property<string>("TipoArea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("TIPO_AREA");

                    b.HasKey("IdAreaPatio");

                    b.HasIndex("IdPatio");

                    b.ToTable("AREAS_PATIO", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.ConfiguracaoSistema", b =>
                {
                    b.Property<string>("ChaveConfig")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CHAVE_CONFIG");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ULTIMA_ATUALIZACAO");

                    b.Property<string>("DescricaoConfig")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("DESCRICAO_CONFIG");

                    b.Property<string>("TipoDadoConfig")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasDefaultValue("TEXTO")
                        .HasColumnName("TIPO_DADO_CONFIG");

                    b.Property<string>("ValorConfig")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("VALOR_CONFIG");

                    b.HasKey("ChaveConfig");

                    b.ToTable("CONFIGURACOES_SISTEMA", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.DadoEventoVisaoComputacional", b =>
                {
                    b.Property<int>("IdEventoVC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_EVENTO_VC");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEventoVC"));

                    b.Property<decimal?>("ConfiancaDeteccao")
                        .HasPrecision(5, 2)
                        .HasColumnType("DECIMAL(5,2)")
                        .HasColumnName("CONFIANCA_DETECCAO");

                    b.Property<string>("CoordenadasDeteccaoImg")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("COORDENADAS_DETECCAO_IMG");

                    b.Property<string>("IdCamera")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID_CAMERA");

                    b.Property<int?>("IdMotoAssociada")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTO_ASSOCIADA");

                    b.Property<int?>("IdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PATIO");

                    b.Property<int?>("IdVagaAssociada")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_VAGA_ASSOCIADA");

                    b.Property<string>("ModeloDetectado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("MODELO_DETECTADO");

                    b.Property<string>("PlacaDetectada")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("PLACA_DETECTADA");

                    b.Property<string>("StatusProcessamento")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasDefaultValue("PENDENTE")
                        .HasColumnName("STATUS_PROCESSAMENTO");

                    b.Property<DateTime>("TimestampEvento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("TIMESTAMP_EVENTO");

                    b.Property<string>("UrlSnapshotImg")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("URL_SNAPSHOT_IMG");

                    b.HasKey("IdEventoVC");

                    b.HasIndex("IdMotoAssociada");

                    b.HasIndex("IdPatio");

                    b.HasIndex("IdVagaAssociada");

                    b.ToTable("DADOS_EVENTO_VISAO_COMPUTACIONAL", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Filial", b =>
                {
                    b.Property<int>("IdFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_FILIAL");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFilial"));

                    b.Property<string>("CepFilial")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("NVARCHAR2(9)")
                        .HasColumnName("CEP_FILIAL");

                    b.Property<string>("CidadeFilial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CIDADE_FILIAL");

                    b.Property<string>("CnpjFilial")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("NVARCHAR2(18)")
                        .HasColumnName("CNPJ_FILIAL");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CADASTRO")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.Property<DateTime?>("DataUltimaAtualizacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ULTIMA_ATUALIZACAO");

                    b.Property<string>("EmailFilial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EMAIL_FILIAL");

                    b.Property<string>("EnderecoFilial")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("ENDERECO_FILIAL");

                    b.Property<string>("EstadoFilial")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("NVARCHAR2(2)")
                        .HasColumnName("ESTADO_FILIAL");

                    b.Property<string>("NomeFilial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)")
                        .HasColumnName("NOME_FILIAL");

                    b.Property<string>("TelefoneFilial")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONE_FILIAL");

                    b.HasKey("IdFilial");

                    b.HasIndex("CnpjFilial")
                        .IsUnique();

                    b.HasIndex("NomeFilial")
                        .IsUnique();

                    b.ToTable("FILIAIS", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.HistoricoLocalizacaoMoto", b =>
                {
                    b.Property<int>("IdHistoricoLoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_HISTORICO_LOC");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistoricoLoc"));

                    b.Property<string>("FonteDadoLocalizacao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("FONTE_DADO_LOCALIZACAO");

                    b.Property<int>("IdMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTO");

                    b.Property<int?>("IdUsuarioRegistro")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO_REGISTRO");

                    b.Property<int?>("IdVagaAnterior")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_VAGA_ANTERIOR");

                    b.Property<int?>("IdVagaNova")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_VAGA_NOVA");

                    b.Property<decimal?>("LatitudeRegistro")
                        .HasPrecision(10, 7)
                        .HasColumnType("DECIMAL(10,7)")
                        .HasColumnName("LATITUDE_REGISTRO");

                    b.Property<decimal?>("LongitudeRegistro")
                        .HasPrecision(10, 7)
                        .HasColumnType("DECIMAL(10,7)")
                        .HasColumnName("LONGITUDE_REGISTRO");

                    b.Property<DateTime>("TimestampRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("TIMESTAMP_REGISTRO")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.HasKey("IdHistoricoLoc");

                    b.HasIndex("IdMoto");

                    b.HasIndex("IdUsuarioRegistro");

                    b.HasIndex("IdVagaAnterior");

                    b.HasIndex("IdVagaNova");

                    b.ToTable("HISTORICO_LOCALIZACAO_MOTO", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.HistoricoStatusMoto", b =>
                {
                    b.Property<int>("IdHistoricoStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_HISTORICO_STATUS");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistoricoStatus"));

                    b.Property<int>("IdMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTO");

                    b.Property<int?>("IdStatusAnterior")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_STATUS_ANTERIOR");

                    b.Property<int>("IdStatusNovo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_STATUS_NOVO");

                    b.Property<int?>("IdUsuarioResponsavel")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO_RESPONSAVEL");

                    b.Property<string>("MotivoMudanca")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("MOTIVO_MUDANCA");

                    b.Property<DateTime>("TimestampMudancaStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("TIMESTAMP_MUDANCA_STATUS")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.HasKey("IdHistoricoStatus");

                    b.HasIndex("IdMoto");

                    b.HasIndex("IdStatusAnterior");

                    b.HasIndex("IdStatusNovo");

                    b.HasIndex("IdUsuarioResponsavel");

                    b.ToTable("HISTORICO_STATUS_MOTO", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Moto", b =>
                {
                    b.Property<int>("IdMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_MOTO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoto"));

                    b.Property<int?>("AnoFabricacaoMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANO_FABRICACAO_MOTO");

                    b.Property<int?>("AnoModeloMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANO_MODELO_MOTO");

                    b.Property<string>("ChassiMoto")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("NVARCHAR2(17)")
                        .HasColumnName("CHASSI_MOTO");

                    b.Property<string>("CorMoto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("COR_MOTO");

                    b.Property<DateTime>("DataCadastroMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CADASTRO_MOTO")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.Property<DateTime?>("DataUltimaAtualizacaoMoto")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ULTIMA_ATUALIZACAO_MOTO");

                    b.Property<int?>("IdFilialBase")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_FILIAL_BASE");

                    b.Property<int>("IdStatusMotoAtual")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_STATUS_MOTO_ATUAL");

                    b.Property<int>("IdTipoMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_TIPO_MOTO");

                    b.Property<int?>("IdVagaAtual")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_VAGA_ATUAL");

                    b.Property<string>("ObservacoesMoto")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("OBSERVACOES_MOTO");

                    b.Property<string>("PlacaMoto")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR2(8)")
                        .HasColumnName("PLACA_MOTO");

                    b.Property<string>("RenavamMoto")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)")
                        .HasColumnName("RENAVAM_MOTO");

                    b.Property<DateTime?>("TimestampUltimaLocalizacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("TIMESTAMP_ULTIMA_LOCALIZACAO");

                    b.Property<decimal?>("UltimaLocalizacaoLatitude")
                        .HasPrecision(10, 7)
                        .HasColumnType("DECIMAL(10,7)")
                        .HasColumnName("ULTIMA_LOCALIZACAO_LATITUDE");

                    b.Property<decimal?>("UltimaLocalizacaoLongitude")
                        .HasPrecision(10, 7)
                        .HasColumnType("DECIMAL(10,7)")
                        .HasColumnName("ULTIMA_LOCALIZACAO_LONGITUDE");

                    b.HasKey("IdMoto");

                    b.HasIndex("ChassiMoto")
                        .IsUnique();

                    b.HasIndex("IdFilialBase");

                    b.HasIndex("IdStatusMotoAtual");

                    b.HasIndex("IdTipoMoto");

                    b.HasIndex("IdVagaAtual")
                        .IsUnique()
                        .HasFilter("\"ID_VAGA_ATUAL\" IS NOT NULL");

                    b.HasIndex("PlacaMoto")
                        .IsUnique();

                    b.HasIndex("RenavamMoto")
                        .IsUnique();

                    b.ToTable("MOTOS", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Patio", b =>
                {
                    b.Property<int>("IdPatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PATIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatio"));

                    b.Property<int?>("CapacidadeTotalMotos")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CAPACIDADE_TOTAL_MOTOS");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CADASTRO")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.Property<string>("DescricaoPatio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("DESCRICAO_PATIO");

                    b.Property<decimal?>("DimensoesPatioMetrosQuadrados")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("DIMENSOES_PATIO_METROS_QUADRADOS");

                    b.Property<int>("IdFilial")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_FILIAL");

                    b.Property<string>("LayoutPatioImgUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("LAYOUT_PATIO_IMG_URL");

                    b.Property<string>("NomePatio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME_PATIO");

                    b.HasKey("IdPatio");

                    b.HasIndex("IdFilial");

                    b.ToTable("PATIOS", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.PermissaoTipoUsuario", b =>
                {
                    b.Property<int>("IdPermissaoTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_PERMISSAO_TIPO_USUARIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermissaoTipoUsuario"));

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_TIPO_USUARIO");

                    b.Property<string>("NomePermissao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NOME_PERMISSAO");

                    b.Property<bool>("Permitido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BOOLEAN")
                        .HasDefaultValue(true)
                        .HasColumnName("PERMITIDO");

                    b.HasKey("IdPermissaoTipoUsuario");

                    b.HasIndex("IdTipoUsuario", "NomePermissao")
                        .IsUnique();

                    b.ToTable("PERMISSOES_TIPO_USUARIO", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.StatusMotoCatalogo", b =>
                {
                    b.Property<int>("IdStatusMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_STATUS_MOTO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusMoto"));

                    b.Property<string>("CorIndicativaStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("NVARCHAR2(7)")
                        .HasColumnName("COR_INDICATIVA_STATUS");

                    b.Property<string>("DescricaoStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("DESCRICAO_STATUS");

                    b.HasKey("IdStatusMoto");

                    b.HasIndex("DescricaoStatus")
                        .IsUnique();

                    b.ToTable("STATUS_MOTO_CATALOGO", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.TipoMoto", b =>
                {
                    b.Property<int>("IdTipoMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_TIPO_MOTO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoMoto"));

                    b.Property<int?>("AnoFabricacaoModelo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANO_FABRICACAO_MODELO");

                    b.Property<string>("DescricaoTipoMoto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("DESCRICAO_TIPO_MOTO");

                    b.Property<string>("MarcaMoto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("MARCA_MOTO");

                    b.Property<string>("ModeloMoto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("MODELO_MOTO");

                    b.Property<string>("UrlImagemModelo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("URL_IMAGEM_MODELO");

                    b.HasKey("IdTipoMoto");

                    b.HasIndex("ModeloMoto")
                        .IsUnique();

                    b.ToTable("TIPOS_MOTO", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_TIPO_USUARIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"));

                    b.Property<string>("DescricaoTipoUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("DESCRICAO_TIPO_USUARIO");

                    b.Property<string>("NomeTipoUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("NOME_TIPO_USUARIO");

                    b.HasKey("IdTipoUsuario");

                    b.HasIndex("NomeTipoUsuario")
                        .IsUnique();

                    b.ToTable("TIPOS_USUARIO", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_USUARIO");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<DateTime>("DataCadastroUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_CADASTRO_USUARIO")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.Property<DateTime?>("DataUltimoLogin")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATA_ULTIMO_LOGIN");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EMAIL_USUARIO");

                    b.Property<int?>("IdFilialAssociada")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_FILIAL_ASSOCIADA");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_TIPO_USUARIO");

                    b.Property<string>("LoginUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LOGIN_USUARIO");

                    b.Property<string>("NomeCompletoUsuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR2(150)")
                        .HasColumnName("NOME_COMPLETO_USUARIO");

                    b.Property<string>("SenhaHashUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("SENHA_HASH_USUARIO");

                    b.Property<string>("StatusUsuario")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasDefaultValue("ATIVO")
                        .HasColumnName("STATUS_USUARIO");

                    b.Property<string>("TelefoneUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TELEFONE_USUARIO");

                    b.HasKey("IdUsuario");

                    b.HasIndex("EmailUsuario")
                        .IsUnique();

                    b.HasIndex("IdFilialAssociada");

                    b.HasIndex("IdTipoUsuario");

                    b.HasIndex("LoginUsuario")
                        .IsUnique();

                    b.ToTable("USUARIOS", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Vaga", b =>
                {
                    b.Property<int>("IdVaga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_VAGA");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVaga"));

                    b.Property<string>("CodigoVaga")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("CODIGO_VAGA");

                    b.Property<decimal?>("CoordenadaXPatio")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("COORDENADA_X_PATIO");

                    b.Property<decimal?>("CoordenadaYPatio")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("COORDENADA_Y_PATIO");

                    b.Property<decimal?>("CoordenadaZPatio")
                        .HasColumnType("DECIMAL(18, 2)")
                        .HasColumnName("COORDENADA_Z_PATIO");

                    b.Property<int>("IdAreaPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID_AREA_PATIO");

                    b.Property<string>("PoligonoVagaGeoJson")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("POLIGONO_VAGA_GEOJSON");

                    b.Property<string>("StatusVaga")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasDefaultValue("LIVRE")
                        .HasColumnName("STATUS_VAGA");

                    b.Property<string>("TipoVaga")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasDefaultValue("NORMAL")
                        .HasColumnName("TIPO_VAGA");

                    b.HasKey("IdVaga");

                    b.HasIndex("IdAreaPatio", "CodigoVaga")
                        .IsUnique();

                    b.ToTable("VAGAS", (string)null);
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.AreaPatio", b =>
                {
                    b.HasOne("MottuAPI.Domain.Entities.Patio", "Patio")
                        .WithMany("AreasPatio")
                        .HasForeignKey("IdPatio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AREAS_PATIO_PATIO");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.DadoEventoVisaoComputacional", b =>
                {
                    b.HasOne("MottuAPI.Domain.Entities.Moto", "MotoAssociada")
                        .WithMany("DadosEventoVisaoComputacional")
                        .HasForeignKey("IdMotoAssociada")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EVENTO_VC_MOTO");

                    b.HasOne("MottuAPI.Domain.Entities.Patio", "Patio")
                        .WithMany("DadosEventoVisaoComputacional")
                        .HasForeignKey("IdPatio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EVENTO_VC_PATIO");

                    b.HasOne("MottuAPI.Domain.Entities.Vaga", "VagaAssociada")
                        .WithMany("DadosEventoVisaoComputacional")
                        .HasForeignKey("IdVagaAssociada")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_EVENTO_VC_VAGA");

                    b.Navigation("MotoAssociada");

                    b.Navigation("Patio");

                    b.Navigation("VagaAssociada");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.HistoricoLocalizacaoMoto", b =>
                {
                    b.HasOne("MottuAPI.Domain.Entities.Moto", "Moto")
                        .WithMany("HistoricoLocalizacaoMotos")
                        .HasForeignKey("IdMoto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HIST_LOC_MOTO");

                    b.HasOne("MottuAPI.Domain.Entities.Usuario", "UsuarioRegistro")
                        .WithMany("HistoricoLocalizacaoMotos")
                        .HasForeignKey("IdUsuarioRegistro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_HIST_LOC_USUARIO");

                    b.HasOne("MottuAPI.Domain.Entities.Vaga", "VagaAnterior")
                        .WithMany("HistoricoLocalizacaoMotosAnteriores")
                        .HasForeignKey("IdVagaAnterior")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_HIST_LOC_VAGA_ANT");

                    b.HasOne("MottuAPI.Domain.Entities.Vaga", "VagaNova")
                        .WithMany("HistoricoLocalizacaoMotosNovas")
                        .HasForeignKey("IdVagaNova")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_HIST_LOC_VAGA_NOVA");

                    b.Navigation("Moto");

                    b.Navigation("UsuarioRegistro");

                    b.Navigation("VagaAnterior");

                    b.Navigation("VagaNova");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.HistoricoStatusMoto", b =>
                {
                    b.HasOne("MottuAPI.Domain.Entities.Moto", "Moto")
                        .WithMany("HistoricoStatusMotos")
                        .HasForeignKey("IdMoto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HIST_STATUS_MOTO");

                    b.HasOne("MottuAPI.Domain.Entities.StatusMotoCatalogo", "StatusAnterior")
                        .WithMany("HistoricoStatusMotosAnteriores")
                        .HasForeignKey("IdStatusAnterior")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_HIST_STATUS_ANT");

                    b.HasOne("MottuAPI.Domain.Entities.StatusMotoCatalogo", "StatusNovo")
                        .WithMany("HistoricoStatusMotosNovos")
                        .HasForeignKey("IdStatusNovo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_HIST_STATUS_NOVO");

                    b.HasOne("MottuAPI.Domain.Entities.Usuario", "UsuarioResponsavel")
                        .WithMany("HistoricoStatusMotos")
                        .HasForeignKey("IdUsuarioResponsavel")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_HIST_STATUS_USUARIO");

                    b.Navigation("Moto");

                    b.Navigation("StatusAnterior");

                    b.Navigation("StatusNovo");

                    b.Navigation("UsuarioResponsavel");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Moto", b =>
                {
                    b.HasOne("MottuAPI.Domain.Entities.Filial", "FilialBase")
                        .WithMany("Motos")
                        .HasForeignKey("IdFilialBase")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_MOTOS_FILIAL_BASE");

                    b.HasOne("MottuAPI.Domain.Entities.StatusMotoCatalogo", "StatusMotoAtual")
                        .WithMany("Motos")
                        .HasForeignKey("IdStatusMotoAtual")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MOTOS_STATUS_ATUAL");

                    b.HasOne("MottuAPI.Domain.Entities.TipoMoto", "TipoMoto")
                        .WithMany("Motos")
                        .HasForeignKey("IdTipoMoto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_MOTOS_TIPO");

                    b.HasOne("MottuAPI.Domain.Entities.Vaga", "VagaAtual")
                        .WithOne("Moto")
                        .HasForeignKey("MottuAPI.Domain.Entities.Moto", "IdVagaAtual")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_MOTOS_VAGA_ATUAL");

                    b.Navigation("FilialBase");

                    b.Navigation("StatusMotoAtual");

                    b.Navigation("TipoMoto");

                    b.Navigation("VagaAtual");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Patio", b =>
                {
                    b.HasOne("MottuAPI.Domain.Entities.Filial", "Filial")
                        .WithMany("Patios")
                        .HasForeignKey("IdFilial")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PATIOS_FILIAL");

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.PermissaoTipoUsuario", b =>
                {
                    b.HasOne("MottuAPI.Domain.Entities.TipoUsuario", "TipoUsuario")
                        .WithMany("PermissoesTipoUsuario")
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PERM_TIPO_USUARIO_TIPO");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("MottuAPI.Domain.Entities.Filial", "FilialAssociada")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdFilialAssociada")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_USUARIOS_FILIAL");

                    b.HasOne("MottuAPI.Domain.Entities.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_USUARIOS_TIPO");

                    b.Navigation("FilialAssociada");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Vaga", b =>
                {
                    b.HasOne("MottuAPI.Domain.Entities.AreaPatio", "AreaPatio")
                        .WithMany("Vagas")
                        .HasForeignKey("IdAreaPatio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_VAGAS_AREA_PATIO");

                    b.Navigation("AreaPatio");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.AreaPatio", b =>
                {
                    b.Navigation("Vagas");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Filial", b =>
                {
                    b.Navigation("Motos");

                    b.Navigation("Patios");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Moto", b =>
                {
                    b.Navigation("DadosEventoVisaoComputacional");

                    b.Navigation("HistoricoLocalizacaoMotos");

                    b.Navigation("HistoricoStatusMotos");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Patio", b =>
                {
                    b.Navigation("AreasPatio");

                    b.Navigation("DadosEventoVisaoComputacional");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.StatusMotoCatalogo", b =>
                {
                    b.Navigation("HistoricoStatusMotosAnteriores");

                    b.Navigation("HistoricoStatusMotosNovos");

                    b.Navigation("Motos");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.TipoMoto", b =>
                {
                    b.Navigation("Motos");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.TipoUsuario", b =>
                {
                    b.Navigation("PermissoesTipoUsuario");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("HistoricoLocalizacaoMotos");

                    b.Navigation("HistoricoStatusMotos");
                });

            modelBuilder.Entity("MottuAPI.Domain.Entities.Vaga", b =>
                {
                    b.Navigation("DadosEventoVisaoComputacional");

                    b.Navigation("HistoricoLocalizacaoMotosAnteriores");

                    b.Navigation("HistoricoLocalizacaoMotosNovas");

                    b.Navigation("Moto")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
